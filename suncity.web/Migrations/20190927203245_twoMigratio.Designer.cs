// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Suncity.Web.Context;

namespace suncity.web.Migrations
{
    [DbContext(typeof(SuncityContext))]
    [Migration("20190927203245_twoMigratio")]
    partial class twoMigratio
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Suncity.Web.Models.Questionnaire", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.HasKey("Id");

                    b.ToTable("Questionnaires");
                });

            modelBuilder.Entity("Suncity.Web.Models.Report", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("additionalComment");

                    b.Property<string>("assessTheMoodOfTheChildBeforeAndAfterTheMeeting");

                    b.Property<Guid?>("childId");

                    b.Property<DateTime>("date");

                    b.Property<string>("describeYourMoodAfterTheMeeting");

                    b.Property<int>("duration");

                    b.Property<Guid?>("mentorId");

                    b.Property<string>("questions");

                    b.Property<bool>("status");

                    b.Property<string>("targetForNextMeeting");

                    b.Property<string>("whatDidYouEndUpDoing");

                    b.Property<string>("whatDidYouPlanToDoAtTheMeeting");

                    b.HasKey("Id");

                    b.HasIndex("childId");

                    b.HasIndex("mentorId");

                    b.ToTable("Reports");
                });

            modelBuilder.Entity("suncity.web.Models.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AddressLine");

                    b.Property<string>("ZipCode");

                    b.HasKey("Id");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("suncity.web.Models.User.Contacts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email");

                    b.Property<string>("PhoneNumber");

                    b.HasKey("Id");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("suncity.web.Models.User.Education", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("EducationLevel");

                    b.Property<string>("EducationalInstitution");

                    b.Property<Guid?>("SCUserId");

                    b.HasKey("Id");

                    b.HasIndex("SCUserId");

                    b.ToTable("Education");
                });

            modelBuilder.Entity("suncity.web.Models.User.SCUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("AddressRegistrationId");

                    b.Property<int?>("AddressResidenceId");

                    b.Property<DateTime>("BirthDate");

                    b.Property<int?>("ContactsId");

                    b.Property<bool>("IsRussianCitizenship");

                    b.Property<string>("MiddleName");

                    b.Property<string>("Name");

                    b.Property<string>("Surname");

                    b.HasKey("Id");

                    b.HasIndex("AddressRegistrationId");

                    b.HasIndex("AddressResidenceId");

                    b.HasIndex("ContactsId");

                    b.ToTable("SCUser");
                });

            modelBuilder.Entity("Suncity.Web.Models.Report", b =>
                {
                    b.HasOne("suncity.web.Models.User.SCUser", "child")
                        .WithMany()
                        .HasForeignKey("childId");

                    b.HasOne("suncity.web.Models.User.SCUser", "mentor")
                        .WithMany()
                        .HasForeignKey("mentorId");
                });

            modelBuilder.Entity("suncity.web.Models.User.Education", b =>
                {
                    b.HasOne("suncity.web.Models.User.SCUser")
                        .WithMany("Education")
                        .HasForeignKey("SCUserId");
                });

            modelBuilder.Entity("suncity.web.Models.User.SCUser", b =>
                {
                    b.HasOne("suncity.web.Models.Address", "AddressRegistration")
                        .WithMany()
                        .HasForeignKey("AddressRegistrationId");

                    b.HasOne("suncity.web.Models.Address", "AddressResidence")
                        .WithMany()
                        .HasForeignKey("AddressResidenceId");

                    b.HasOne("suncity.web.Models.User.Contacts", "Contacts")
                        .WithMany()
                        .HasForeignKey("ContactsId");
                });
#pragma warning restore 612, 618
        }
    }
}
